[tool.poetry]
name = "python-grace"
version = "0.0.5"
description = "An unofficial Python wrapper for the GRACE system."
license = "MIT"
authors = ["Takahiro Ueda <tueda@st.seikei.ac.jp>"]
readme = "README.md"
repository = "https://github.com/tueda/python-grace"
keywords = ["particle physics", "automatic calculation"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
]
packages = [
    {include = "grace"},
]
include = [
    {path = "grace/extern/CMakeLists.txt", format = "sdist"},
    {path = "grace/patch/**/*.cmake", format = "sdist"},
    {path = "grace/patch/**/*.in", format = "sdist"},
    {path = "grace/patch/**/*.patch", format = "sdist"},
    {path = "grace/patch/**/CMakeLists.txt", format = "sdist"},

    {path = "grace/bin/*", format = "wheel"},
    {path = "grace/bin/debug/*", format = "wheel"},
    {path = "grace/lib/*.a", format = "wheel"},
    {path = "grace/lib/dbkinem/**/*.f", format = "wheel"},
    {path = "grace/lib/debug/*.a", format = "wheel"},
    {path = "grace/lib/model/**/*.fin", format = "wheel"},
    {path = "grace/lib/model/**/*.mdl", format = "wheel"},
    {path = "grace/lib/templates/**/in.prc", format = "wheel"},
]
exclude = [
    "grace/bin",
    "grace/extern",
    "grace/lib",
    "grace/patch",
]

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.poetry.scripts]
grace = "grace.main:main"

[tool.poetry.dependencies]
python = "^3.6.1"

appdirs = "^1.4.4"
click = "^8.0.1"
patch = "^1.16"

importlib-metadata = {version = "^4.8.1", python = "<3.8"}

[tool.poetry.dev-dependencies]
cmake = "^3.21.2"
ninja = "^1.10.2"
pre-commit = "^2.14.1"
pytest = "^6.2.5"
pytest-cov = "^2.12.1"
scikit-build = "^0.12.0"
taskipy = "^1.8.1"

[build-system]
requires = [
    "poetry-core>=1.0.4",
    "scikit-build>=0.12.0",
    "cmake>=3.21.2",
    "ninja>=1.10.2",

    "appdirs",
    "patch",
]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
exclude_lines = [
    "@overload",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError()",
    "return NotImplemented",
]

[tool.isort]
profile = "black"

[tool.mypy]
pretty = true
show_error_codes = true
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "appdirs",
    "importlib_metadata",
    "patch",
    "skbuild",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--cov-report=html",
    "--cov-report=term",
    "--cov=grace",
    "--doctest-modules",
    "--ignore=_skbuild",
    "--ignore=build.py",
    "--strict-markers",
    "-m",
    "not test_install",
]
markers = [
    "test_install"
]

[tool.taskipy.tasks]
# Set up a development environment.
setup = "pre-commit install && pre-commit install --hook-type commit-msg"

# Run linters (+ fix).
lint = "pre-commit run --all-files"

# Run tests.
test = "pytest"
pre_test = "task grace-build"

# Build GRACE.
grace-build = "python build.py"

# Create a patch set for GRACE.
grace-diff = "python -c 'import build; build.diff()'"

# Reset the GRACE source code tree (original + patch).
grace-reset = "python -c 'import build; build.reset()'"

# Rebuild GRACE.
grace-rebuild = "task grace-reset && task grace-build"
